using UnrealSharp;
using UnrealSharp.Core;
using UnrealSharp.Attributes;
using UnrealSharp.Engine;
using GameDataAccessTools.Core.Views;
using ZLinq;

namespace {{Namespace}};

[UClass]
public class U{{EngineName}}BlueprintLibrary : UBlueprintFunctionLibrary
{
    [UFunction(FunctionFlags.BlueprintPure, DisplayName = "Is Valid", Category = "{{EngineName}}")]
    public static bool IsValidHandle({{StructName}} handle) => handle.IsValid;

    [UFunction(FunctionFlags.BlueprintPure, DisplayName = "Convert to Name", Category = "{{EngineName}}")]
    [UMetaData("CompactNodeTitle", "->")]
    [UMetaData("BlueprintAutoCast")]
    public static FName Convert{{EngineName}}ToName({{StructName}} handle) => handle;
    
    [UFunction(FunctionFlags.BlueprintPure, DisplayName = "Convert To {{EngineName}}", Category = "{{EngineName}}")]
    [UMetaData("CompactNodeTitle", "->")]
    [UMetaData("BlueprintAutoCast")]
    public static {{StructName}} ConvertNameTo{{EngineName}}(FName handle) => handle;

    {{#Properties}}
    [UFunction(FunctionFlags.BlueprintPure, Category = "{{../EngineName}}")]
    public static {{Type}} {{Prefix}}{{Name}}({{../StructName}} handle) => handle.Entry.{{Name}}{{ConversionCall}};

    {{/Properties}}
}