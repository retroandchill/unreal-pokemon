using UnrealSharp;
using UnrealSharp.Attributes;
using UnrealSharp.CoreUObject;
using UnrealSharp.Engine;
using UnrealSharp.RPGCore;
using GameDataAccessTools.Core.Utilities;

namespace {{Namespace}};

partial class {{ClassName}} : {{#Components}}IRPGEntity<{{ComponentType}}>{{^IsLast}}, {{/IsLast}}{{/Components}}
{
    {{#Components}}
    {{ComponentType}} IRPGEntity<{{ComponentType}}>.Component => {{ComponentName}};
    {{/Components}}

    protected override void CreateRequiredComponents()
    {
        {{#Components}}
        {{ComponentName}} = CreateComponent<{{ComponentType}}>();
        {{#HasInitializer}}
        {{ComponentName}}.BindInitFunction<{{../InitializerStruct}}>({{ComponentName}}.{{InitializerName}});
        {{/HasInitializer}}
        {{^IsLast}}
            
        {{/IsLast}}
        {{/Components}}
    }

    {{#HasFactory}}
    protected override UScriptStruct ManagedGetEntityStruct() => {{InitializerStruct}}.StaticStruct;

    public static partial {{ClassName}} Create({{OuterType}} {{OuterParam}}, {{InitializerStruct}} {{InitializerParams}})
    {
        var newEntity = NewObject<{{ClassName}}>({{OuterParam}}{{#HasSubclassSource}}, {{SubclassSource}}{{#SubclassSourceIsMethod}}(){{/SubclassSourceIsMethod}}{{/HasSubclassSource}});
        newEntity.InitializeComponents({{InitializerParams}});
        return newEntity;
    }
    {{/HasFactory}}
}